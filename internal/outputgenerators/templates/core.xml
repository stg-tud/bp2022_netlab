<?xml version='1.0' encoding='UTF-8'?>
<scenario name="{{ .ScenarioName }}">
{{- if .Networks}}
  {{- $WirelessLANExists := false }}
  {{- $PCExists := false }}
  <networks>
    {{- range .Networks}}
    <network id="{{ .Id }}" name="net_{{ .Prefix }}" icon="" canvas="0" type="{{ .NetworkTypeName }}">
      <position x="{{ .Position.X }}" y="{{ .Position.Y }}"/>
    </network>
    {{- end}}
  </networks>
  <devices>
    {{- range .Networks}}
    {{- range .Devices}}
    <device id="{{ .Id }}" name="{{ .Name }}" icon="" canvas="0" type="router" class="" image="">
      <position x="{{ .Position.X }}" y="{{ .Position.Y }}"/>
      {{- if eq .Type "router"}}
      <services>
        <service name="zebra"/>
        <service name="OSPFv2"/>
        <service name="OSPFv3"/>
        <service name="IPForward"/>
      </services>
      {{- else if eq .Type "PC"}}
      {{- $PCExists = true }}
      <services>
        <service name="DefaultRoute"/>
      </services>
      {{- else}}
      <services/>
      {{- end}}
    </device>
    {{- end}}
    {{- end}}
  </devices>
  <links>
    {{- range $index, $netw := .Networks}}
    {{- range $index, $dev := .Devices}}
    <link node1="{{ $netw.Id }}" node2="{{ $dev.Id }}">
      <iface2 id="0" name="eth0" mac="{{ $dev.Mac }}" ip4="{{ $dev.IPv4 }}" ip4_mask="{{ $netw.IPv4Mask }}" ip6="{{ $dev.IPv6 }}" ip6_mask="{{ $netw.IPv6Mask }}"/>
      {{- if eq $netw.NetworkTypeName "WIRELESS_LAN"}}
      {{- $WirelessLANExists = true }}
      <options delay="{{ $netw.NetworkType.Delay }}" bandwidth="{{ $netw.NetworkType.Bandwidth }}" loss="{{ $netw.NetworkType.Loss }}" dup="0" jitter="{{ $netw.NetworkType.Jitter }}" unidirectional="0" buffer="0"/>
      {{- else}}
      <options/>
      {{- end}}
    </link>
    {{- end}}
    {{- end}}
  </links>
  {{- if $WirelessLANExists }}
  <mobility_configurations>
    {{- range .Networks}}
    {{- if eq .NetworkTypeName "WIRELESS_LAN"}}
    <mobility_configuration node="{{ .Id }}" model="basic_range">
      <configuration name="range" value="{{ .NetworkType.Range }}"/>
      <configuration name="bandwidth" value="{{ .NetworkType.Bandwidth }}"/>
      <configuration name="jitter" value="{{ .NetworkType.Jitter }}"/>
      <configuration name="delay" value="{{ .NetworkType.Delay }}"/>
      <configuration name="error" value="{{ .NetworkType.Loss }}"/>
      <configuration name="promiscuous" value="{{if .NetworkType.Promiscuous}}1{{else}}0{{end}}"/>
    </mobility_configuration>
    {{- end}}
    {{- end}}
  </mobility_configurations>
  {{- else}}
  <mobility_configurations/>
  {{- end}}
  {{- if $PCExists }}
  <configservice_configurations>
    {{- range .Networks}}
    {{- range .Devices}}
    {{- if eq .Type "PC"}}
    <service name="DefaultRoute" node="{{ .Id }}"/>
    {{- end}}
    {{- end}}
    {{- end}}
  </configservice_configurations>
  {{- else}}
  <configservice_configurations/>
  {{- end}}
{{- else}}
  <networks/>
  <links/>
  <devices/>
  <mobility_configurations/>
  <configservice_configurations/>
{{- end}}
  <session_origin lat="47.579166412353516" lon="-122.13232421875" alt="2.0" scale="150.0"/>
  <session_options>
    <configuration name="controlnet" value=""/>
    <configuration name="controlnet0" value=""/>
    <configuration name="controlnet1" value=""/>
    <configuration name="controlnet2" value=""/>
    <configuration name="controlnet3" value=""/>
    <configuration name="controlnet_updown_script" value=""/>
    <configuration name="enablerj45" value="1"/>
    <configuration name="preservedir" value="0"/>
    <configuration name="enablesdt" value="0"/>
    <configuration name="sdturl" value="tcp://127.0.0.1:50000/"/>
    <configuration name="ovs" value="0"/>
    <configuration name="platform_id_start" value="1"/>
    <configuration name="nem_id_start" value="1"/>
    <configuration name="link_enabled" value="1"/>
    <configuration name="loss_threshold" value="30"/>
    <configuration name="link_interval" value="1"/>
    <configuration name="link_timeout" value="4"/>
    <configuration name="mtu" value="0"/>
  </session_options>
  <session_metadata>
    <configuration name="shapes" value="[]"/>
    <configuration name="edges" value="[]"/>
    <configuration name="hidden" value="[]"/>
    <configuration name="canvas" value="{&quot;gridlines&quot;: true, &quot;canvases&quot;: [{&quot;id&quot;: 1, &quot;wallpaper&quot;: null, &quot;wallpaper_style&quot;: 1, &quot;fit_image&quot;: false, &quot;dimensions&quot;: [{{ .WorldSize.Width }}, {{ .WorldSize.Height }}]}]}"/>
  </session_metadata>
  <default_services>
    <node type="mdr">
      <service name="zebra"/>
      <service name="OSPFv3MDR"/>
      <service name="IPForward"/>
    </node>
    <node type="PC">
      <service name="DefaultRoute"/>
    </node>
    <node type="prouter"/>
    <node type="router">
      <service name="zebra"/>
      <service name="OSPFv2"/>
      <service name="OSPFv3"/>
      <service name="IPForward"/>
    </node>
    <node type="host">
      <service name="DefaultRoute"/>
      <service name="SSH"/>
    </node>
  </default_services>
</scenario>